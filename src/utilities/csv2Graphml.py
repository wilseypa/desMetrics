# USAGE:  python csv2graphml.py inFile.csv outFileName

# this utility program takes a csv generated by the desAnalysis program, namely
# eventsExchanged-remote.csv, and creates a graphml file in current directory.
# this program attempts to create a network graph to show LP by LP communication.
# the graphml file generated can be used to visualize the graph with tools such as
# graphviz, or with software such as gephi. the graph is undirected with an attribute
# weight, taken from the number of events sent.

import sys
import numpy as np
import networkx as nx

# checks number of arguments
argc = len(sys.argv)
if argc != 3:
	print 'error - too few or too many arguments. Syntax: python csv2graphml.py inFile.csv outFileName'
	sys.exit()

# assign arguments
inFile = sys.argv[1]
outFileName = sys.argv[2]
outFile = outFileName + '.graphml'

# get csv file and create a list for each column
data = np.loadtxt(inFile, dtype=np.intc, delimiter = ",", skiprows=2, usecols=(0,1,2))
nodes = [x[0] for x in data]
edges = [x[1] for x in data]
weights = [int(x[2]) for x in data]

# create the undirected graph
G = nx.Graph()
for i in np.arange(len(data)):
	G.add_node(int(nodes[i]), weight=weights[i])
	G.add_edge(int(nodes[i]),int(edges[i]), weight=weights[i])

# write graph to a file
nx.write_graphml(G,outFile)
